Hi,

Here are the System Requirements Specification for Speedy Composer.

Programming language: Python, PostgreSQL, MATLAB & Octave.

Website: http://en.speedycomposer.com/

Logo: Will be similar to the logo of http://en.speedycomposer.com/ .

Graphics: No need to use graphics, just plain white pages and logo.

System Requirements Specification: You need to download the files from SourceForge [https://sourceforge.net/projects/speedycomposer/], then translate the composition program (compose.m) into PHP, using the neural networks saved from MATLAB (networks.mat).  Here are the requirements for the website:

1. Users will be able to register using username (alphanumeric, at least 4 characters, must start with a letter), password (alphanumeric, at least 4 characters, different than username), confirm password, and (optional) e-mail address (like registering to Wikipedia). [registering will be via http://en.speedy.net/ - under construction].

2. Users who are already registered, will be able to login from the main page [http://en.speedycomposer.com/ or http://en.speedy.net/].

3. PostgreSQL database will be used for saving usernames, an encrypted hash of the password, and e-mail address.  The password itself will not be saved to the database. [registering will be via http://en.speedy.net/ - under construction].

4. If the user forgets his or her password, a new password will be generated and sent via e-mail (user will enter his username or e-mail address). [will be via http://en.speedy.net/ - under construction].

5. For each user, a folder named "My Compositions" will be generated. The user will be able to rename the default folder or create new folders.

6. The composition will be done after the user selects a specific progress of musical chords (from a predefined list), or selecting his or her own progress of chords (user defined), which will also be saved to the user's chord progress (a folder "Chord Progress" will be created).

7. When users press the "Compose!" button on the website (after selecting a folder), the user will be shown a small rotating icon ("composition in progress"), and then the composition will be generated using AJAX, and saved as a MIDI file to the user's default folder, or the folder selected (the user will enter the folder before composing the melody). The name of the melody file will be "Composition #1", and then "Composition #2" etc.

8. Users will select "public" or "private" for each composition (the default will be private).  The composed melody will be downloadable (in MIDI format or MP3 format) by the user, and if the composition is public it will be downloadable by anyone from the user's directory.  For example, if username is "aaaa", then composition URL will be something like "http://en.speedycomposer.com/aaaa/my-compositions/composition-1/" (with all letters lowercase, using underlines instead of spaces and with "#" characters ignored).

9. After composing a melody, the melody will play automatically for the user, and the user will be able to download it in MIDI format or MP3 format.

10. Accompaniment: will be added to the MIDI file.  accompaniment will be taken from the C++ file (data2text.cpp).

11. The MIDI file will contain this text: "This melody was composed by Speedy Composer [en.speedycomposer.com] by user aaaa(username) on 4 August 2010(date)."

12. The website will contain a small form "send", where users will be able to send a link of the composed melody to a friend (by e-mail, or via the internal message system of en.speedy.net).

13. The user will be able to rename a melody (the default names will be "Composition #n").

14. Users will be able to move a melody to another folder.

15. Users will be able to change password or e-mail address.  Change of username will not be permitted. [will be via http://en.speedy.net/ - under construction].

16. Users will be able to delete compositions or folders (after a warning).

17. Browser support: will be tested with Chrome, Firefox and Safari.

19. All urls will be lowercase, alphanumerice with slashes and dashes. The username's slug may also contain dots or underlines. Default folder slug will only be alphanumeric with dashes, but the owner will be able to change it to contain dots or underlines. Other characters will not be allower.

20. Urls with different slugs which convert to the same username will be redirected to the default slug.

21. Users and compositons from the PHP/MySQL website will be converted to the new Python/PostgreSQL website.

You can find more details and examples of melodies composed by this project on this website:
http://www.speedysoftware.com/composer/

There is also a project on SourceForge, where you can download the MATLAB source files & project files:
https://sourceforge.net/projects/speedycomposer/

In the future, we will also develop an application for composing melodies on personal computers (for Windows, Mac and Linux) and for mobile devices (Android and iPhone). The applications will be open source.

Best Regards,
Uri Even-Chen
E-mail: uri@speedy.net
Website: http://www.speedysoftware.com/uri/en/
